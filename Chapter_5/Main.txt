Глава 5. Классы и интерфейсы.

extends - расширение существующих классов.
Для классов по умолчанию установлен модификатор доступа public.
abstarct - делает класс абстрактным. Нельзя создавать объект класса.
Может содержать в себе абстрактные методы. Класс, котрый наследуется от абстрактного,
обязан реализовать абстрактный метод в своем классе. Иначе будет ошибка во время компиляции.
Методы(не абстрактные), которые определены в абстрактном классе, классы-наследники могут
переопределять.

super - аналог base в c#. Можем обращаться к методам базового класса(к свойствам нельзя).

При возврате из метода ключевого слова this вернется текущий экземпляр класса. Удобно при наследвании,
чтобы каждый раз не менять возвращающийся тип.

Интерфейсы.

Для объединения несколько типов используется &.
type A = {
    a: int,
    b: int
};

type B & {
    c: int
}

Для интерфейсов используется ключевое слово extends. Интерфейс также может расширять класс, тип.
Разлчие:
1) Тип может быть примитивом. Интерфейс - только объектом.
2) При расширении интерфейсов происходит проверка их на совместимость. Если несовметимы, то происходит
ошибка компиляции. Для типов компилятор сам попробует сформировать итоговый тип, который будет совместим.
3) Если определить несколько интерфейсов с одинаоквыми именами, то компилятор их объединит. Для
типов будет ошибка компиляции.

interface User { 
 name: string
}
// Теперь User имеет два поля, name и age
interface User { 
 age: number
}

Автоматически произойдет слияние интерфейсов
interface User { 
 name: string,
 age: number
}

Чтобы указать, что класс реализует интерфейс, используется ключевой слово implements.
В интерфейсах можно указывать ключевое слово readonly.

При сравнении типов для ts важно, чтобы они структурно были одинаковыми. Если у них разное название,
но имеютт одинаковые поля и методы, то ts будет считать типы одинаковыми.

Полиморфизм.
Если мы объявим параметр обобщенного типа на уровне класса, то методы класса, конструктор имеют доступ
к этому параметру. Статический метод должне реализовывать свои параметры.

Примеси - аналог наследования.
Глава 3. Подробно о типах.

Any - позволяет присваивать любое возможное значение переменной и выполнять над ней все возможные действия.
Стоит избегать использования этого типа, т.к. ts используется для уточнения типа, а any противоречит этой концепции.

Unknown - используется, если мы имеем переменную, тип которой узнаем позднее. Представляет любое значение, но чтобы его использовать, ts потребует уточнить его тип.

Boolean - логический тип.
Number - все числовые значения.
Bigint - все большие целочисленные значения(от 2 в 53 степени).
String - строковый тип.
Symbol - используется для ключейй.
Object - объекты. При создании объекта, если мы уточняем какие свойства имеет объект, то названия свойств класса должны совпадать с названием свойств типа, которые используются при аннотации ts.(firstName и lastName)
never - используется в качестве возвращаемого значения функции, чтобы указать, что функция никогда ничего не возвращает(либо выбрасывает исключение, либо бесконечный цикл).

let c: {
 firstName: string 
 lastName: string
} = {
 firstName: 'john', 
 lastName: 'barrowman'
}
class Person {
 constructor(
 public firstName: string,
 public lastName: string
 ) {}
}
c = new Person('matt', 'smith')

Пример опциональных свойств

let a: {
 b: number ❶
 c?: string ❷
 [key: number]: boolean ❸
}

Под 3 пункт попадает свойство (20: false). Свойство c может иметь значение undefined.

2 основных способа объявления объекта:
let a: {b: number} = {} - основной способ
let a: object = {} - когда нам не важно какие свойства содержит объект.

Иерархия:
Unknown -> any -> ...

Псевдонимы типов.
Ключевое слово type. Используется для объявления типов.

type Age = number;

type Person = {
 name: string
 age: Age
}

type a = number || string

Все псевдонимы для переменных надо указывать явно в виде аннотации.
let age: Age = 55

Объединение свойств объектов
type Cat = {name: string, purrs: boolean}
type Dog = {name: string, barks: boolean, wags: boolean}
type CatOrDogOrBoth = Cat | Dog

Пересечение свойств объектов
type Cat = {name: string, purrs: boolean}
type Dog = {name: string, barks: boolean, wags: boolean}
type CatAndDog = Cat & Dog

Кортежи
let a: [number, string] = [20, 'a'];

Enum - перечисление.
enum Language { 
 English, 
 Spanish, 
 Russian
}

В качестве значений лементам перечисления можно присваивать выражения.